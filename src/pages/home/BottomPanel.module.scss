.sheet,
.sheet * {
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
  -webkit-user-select: none;
  user-select: none;
  -webkit-user-drag: none;
}

.sheet {
  z-index: 100;
  position: fixed;
  // left: 2vw;
  // width: 96vw;
  height: calc(100vh + var(--closed-panel-size, 100px));
  width: 100vw;
  border-radius: 12px 12px 0px;

  background: #04521b;
  color: black;

  touch-action: none;

  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.5);

  // Content internal to this can use this var to pad their top if needed
  // We don't provide any padding (other than the bottom to compensate)
  // so content can be edge-to-edge.
  // Note that this var is also used by .openCloseArrow to SET it's own height.
  // This height is critical in providing a large enough drag target.
  --arrow-height: 3rem;

  .content {
    overflow: auto;
    touch-action: pan-y;

    position: absolute;
    top: 0;
    bottom: auto;
    right: 0;
    left: 0;

    // Necessary to allow scrolling all the way to the bottom
    height: var(--content-height, 100vh);
  }

  .openCloseArrow {
    width: 100%;
    height: var(--arrow-height, 1.5rem);
    position: relative;
    z-index: 50;

    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
    cursor: pointer;

    $width: 1.5rem;
    $overlap: 0.45;
    $rotation: 7deg;

    --width: $width;
    --overlap: $overlap;
    --rotation: $rotation;

    transition: opacity 0.25s linear;
    opacity: 1;

    &.hidden {
      opacity: 0;
      pointer-events: none;
    }

    &::after,
    &::before {
      content: " ";
      display: block;
      // Explicit color instead of alpha of white
      // because of overlap of the inner corners of the triangle
      background: rgb(122, 122, 122);
      position: absolute;
      z-index: 50;

      border-radius: 0.125rem;
      height: 0.25rem;
      width: 1.5rem;

      left: 50%;
      top: 0.5rem;

      transition: transform 0.5s cubic-bezier(0.075, 0.82, 0.165, 1);
    }

    :global(.MuiButtonBase-root) {
      width: 100%;
      height: 100%;

      border-top-left-radius: 0.5rem;
      border-top-right-radius: 0.5rem;
      cursor: pointer;
    }

    &.customArrow {
      &::before {
        transform: var(
          --custom-before-tx,
          translateX(calc(-50% - #{$width * $overlap})) rotate(-#{$rotation})
        );
      }

      &::after {
        transform: var(
          --custom-after-tx,
          translateX(calc(-50% + #{$width * $overlap})) rotate(#{$rotation})
        );
      }
    }

    &.barIndicator {
      &::before {
        transform: translateX(calc(-50% - #{$width * $overlap})) rotate(0deg);
      }

      &::after {
        transform: translateX(calc(-50% + #{$width * $overlap})) rotate(0deg);
      }
    }
  }

  &.fullWindowHeight {
    border-radius: 0 !important;

    .openCloseArrow {
      :global(.MuiButtonBase-root) {
        border-radius: 0 !important;
      }
    }
  }
}

body:global(.native) {
  .sheet {
    padding-top: var(--native-padding-adjust, 0);

    .content {
      top: var(--native-padding-adjust, 0);
      bottom: auto;

      // Necessary to allow scrolling all the way to the bottom
      height: calc(
        var(--content-height, 100vh) - var(--native-padding-adjust, 0)
      );
    }
  }
}